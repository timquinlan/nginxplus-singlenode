user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

# Load Modules
load_module /usr/lib/nginx/modules/ngx_http_js_module.so; # NGINX Javascript


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_id"';

    # NGINX Plus Additional NGINX Metrics
    log_format  main_ext  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$http2" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status $request_id' ;

    # access_log  /var/log/nginx/access.log  main; # Default
    access_log  /var/log/nginx/access.log  main_ext; # NGINX Plus Additional NGINX Metrics

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    resolver 127.0.0.11 ipv6=off; # Docker DNS


upstream local_upstream {
        server localhost:81;
    }

server {
    listen 81;
    location / {
        return 200 "content handled by proxy_pass\n";
    }
}

server {
    listen 80;
    js_path "/etc/nginx/njs";
    
    location / {
        #js_import cr.js;
        #js_content cr.cr;
	#auth_request /evaluate_redirect;
        proxy_pass http://local_upstream;
    }

    location /evaluate_redirect {
        internal;
        js_import cr.js;
        js_content cr.cr;
    }

    location /redirected {
        return 200 "this is the redirected location\n";
    }
    
    location /api {
        api write=on;
        allow 127.0.0.0/8; #allow connections from within docker network
        deny all;
    }

    location = /dashboard.html {
        root /usr/share/nginx/html;
    }
}

}
